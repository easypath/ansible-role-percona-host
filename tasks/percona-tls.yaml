---

  - name: Create CSR (on control machine)
    local_action:
      module: >
        shell openssl req -newkey rsa:{{cert_key_size}} -nodes -subj "/CN={{inventory_hostname}}"
        -keyout "{{cert_src_path}}/{{inventory_hostname_short}}.key" -out "{{cert_src_path}}/{{inventory_hostname_short}}.csr"
    ignore_errors: true
    when:
      - cert_src_path is defined

  # @AB TODO: using OpenSSL CA serial file does not always generate unique serial when running playbook against multiple hosts
  - name: Sign cert request by CA (on control machine)
    local_action:
      module: >
        shell openssl x509 -req -sha256 -days {{cert_valid_days}}
        -CA "{{cert_src_path}}/{{tls_ca_cert}}" -CAkey "{{cert_src_path}}/{{tls_ca_key}}" -set_serial {{ 999999 | random }}
        -in "{{cert_src_path}}/{{inventory_hostname_short}}.csr" -out "{{cert_src_path}}/{{inventory_hostname_short}}.pem"
    ignore_errors: true
    when:
      - cert_src_path is defined
      - tls_ca_cert is defined
      - tls_ca_key is defined

  - name: Create certificate folder
    file:
      path: "{{cert_dest_path}}"
      state: directory
      owner: mysql
      group: mysql
      mode: 0750
      seuser: system_u
      setype: mysqld_db_t
    become: yes

  - name: Copy TLS certificates
    copy: 
      src: "{{item.src}}"
      dest: "{{item.dest}}"
      owner: mysql
      group: mysql
      mode: 0640
      seuser: system_u
      setype: mysqld_db_t
    become: yes
    with_items:
      - { src: "{{cert_src_path}}/{{tls_ca_cert}}", dest: "{{cert_dest_path}}/{{tls_ca_cert}}" }
      - { src: "{{cert_src_path}}/{{inventory_hostname_short}}.pem", dest: "{{cert_dest_path}}/{{inventory_hostname_short}}.pem" }
      - { src: "{{cert_src_path}}/{{inventory_hostname_short}}.key", dest: "{{cert_dest_path}}/{{inventory_hostname_short}}.key" }
    when:
      - cert_src_path is defined
      - tls_ca_cert is defined

